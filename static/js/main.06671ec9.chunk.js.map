{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","quotes","idx","display","getRandomQuote","bind","fetch","then","res","json","setState","quo","this","length","Math","floor","random","quote","id","class","author","onClick","href","target","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAAe,I,sBCyEAA,E,kDAzDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,GACRC,IAAK,EACLC,SAAS,GAEX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAPL,E,qDAUnB,WAAoB,IAAD,OACjBC,MAlBQ,0IAkBGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAC1BF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACZT,OAAQO,EAAIP,c,4BAKjB,WAxBH,IAAqBU,EAyBjBC,KAAKF,SAAS,CACZR,KA1BeS,EA0BEC,KAAKZ,MAAMC,OAAOY,OAzBhCC,KAAKC,MAAMD,KAAKE,SAAWL,Q,oBA4BlC,WAEE,MAAyBC,KAAKZ,MACxBiB,EADN,EAAQhB,OAAR,EAAgBC,KAEd,OAEG,cADD,CACC,OAAKgB,GAAG,YAAYC,MAAM,iCAA1B,UACK,qBAAKD,GAAG,OAAR,SACA,qBAAKC,MAAM,MAAX,SACE,qBAAKA,MAAM,WAAX,SACE,qBAAKA,MAAM,OAAX,SACFF,GACE,gCACC,oBAAGE,MAAM,yBAAyBD,GAAG,SAArC,cAAgDD,EAAMA,MAAtD,OACC,oBAAGC,GAAG,MAAMC,MAAM,yBAAlB,gBAA+CF,EAAMG,OAArD,oBAQV,sBAAKF,GAAG,MAAR,UACA,wBAAQA,GAAG,YAAYC,MAAM,mCAAmCE,QAAST,KAAKR,eAA9E,uBACA,8BACA,mBAAGkB,KAAK,2BAA2BJ,GAAG,QAAQK,OAAO,SAArD,SAA8D,wBAAQL,GAAG,QAAQC,MAAM,mCAAzB,mC,GAlDtDK,IAAMC,WCHTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.06671ec9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { button } from 'react-bootstrap';\n\n  //Random Quote Machine\n\n// Api where i got my quotes from\nconst API = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n//function to get random quotes\nfunction getNewQuote(quo) {\n  return Math.floor(Math.random() * quo);\n}\n//react class component \nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      idx: 0,\n      display: true\n    };\n    this.getRandomQuote = this.getRandomQuote.bind(this);\n }\n  //used fetch with coponentDidMount to call my API\n  componentDidMount(){\n    fetch(API).then(res => res.json())\n    .then(res => {\n      this.setState({\n        quotes: res.quotes\n      });\n    });   \n  }\n  //getRandom method used for random quotes\n   getRandomQuote() {\n    this.setState({\n      idx: getNewQuote(this.state.quotes.length)\n    });\n  }\n  render() {\n    //use of idx(index) to get random quotes\n    const { quotes, idx, } = this.state;\n    const quote = quotes[idx];\n      return (\n        //multi divs with <p>quotes & author with 2 buttons\n         <div id=\"quote-box\" class=\"p-3 mb-2 bg-success text-white\">\n              <div id=\"text\">\n              <div class=\"row\">\n                <div class=\"col-xs-8\">\n                  <div class=\"well\">{\n                quote && ( \n                  <div>\n                   <p class=\"text-white center-left\" id=\"author\">\"{quote.quote}\"</p>                   \n                    <p id=\"aut\" class=\"center-white text-left\">-- {quote.author} --</p>\n                    </div>\n                  )\n                }\n                </div>\n                    </div>\n              </div>\n             </div>\n          <div id=\"btn\">\n          <button id=\"new-quote\" class=\"btn text-white bg-dark btn-block\" onClick={this.getRandomQuote}>New Quote</button>\n          <div>\n          <a href=\"twitter.com/intent/tweet\" id=\"tweet\" target=\"_blank\"><button id=\"quote\" class=\"btn text-white bg-dark btn-block\">Twitter</button></a>\n          </div>\n          </div>\n          </div>\n      );\n    }\n  };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}